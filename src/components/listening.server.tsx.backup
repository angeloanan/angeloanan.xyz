import useSWR from 'swr'

const jsonFetch = (url: string) => fetch(url).then(r => r.json())
const encodedLastFMToken = encodeURIComponent(process.env.LASTFM_KEY as string)
const LASTFM_WEEKLY_ENDPOINT = `http://ws.audioscrobbler.com/2.0/?method=user.getweeklytrackchart&user=angeloanan&api_key=${encodedLastFMToken}&format=json`

export const getStaticProps = async () => {
  const fetchRequest = await fetch(LASTFM_WEEKLY_ENDPOINT)
  const fetchData = await fetchRequest.json()

  const trackList = fetchData.weeklytrackchart.track as LastFMTrack[]
  trackList.splice(5)

  const generatedTrackList = await Promise.all(
    trackList.map(async track => {
      const encodedTrackName = encodeURIComponent(track.name)
      const encodedArtistName = encodeURIComponent(track.artist['#text'])

      const trackInfoFetch = await fetch(
        `http://ws.audioscrobbler.com/2.0/?method=track.getInfo&api_key=${encodedLastFMToken}&track=${encodedTrackName}&artist=${encodedArtistName}&format=json`
      )
      const { track: trackInfo } = await trackInfoFetch.json()

      let trackImageUrl = trackInfo?.album?.image?.[1]['#text']
      if (trackImageUrl == null || trackImageUrl === '')
        trackImageUrl = '/img/unknown-album.webp'

      return {
        title: track.name,
        artist: track.artist['#text'],
        image: trackImageUrl,
        url: track.url
      }
    })
  )

  return generatedTrackList
}

export default function Listening() {
  const topTracks = useSWR<LastFMTrack[]>(LASTFM_WEEKLY_ENDPOINT, jsonFetch)

  return (

  )
}
